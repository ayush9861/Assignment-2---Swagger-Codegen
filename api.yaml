openapi: 3.0.0

info:
  version: 0.0.1
  title: Server API
  description: This Server API is the API for the Server Spring Boot Project. 


paths:
  /api/server/add:
    post:
      summary: Add a new server.
      tags:
        - "Server"
      requestBody:
        $ref: '#/components/requestBodies/ServerBody'
      responses:
        "200":
          description: This means its ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/server'
          
  /api/server/:
    get:
      summary: Get all Servers.
      tags:
        - "Server"

      description: This is Server service description
      responses:
        "200":
          description: This means its ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/server'
            
  /api/server/{id}:
    get:
      summary: Get server by Id.
      tags:
        - "Server"
      parameters:
      - name: id
        required: true
        in: path
        description: Fetch Result for an Id.
        schema:
          type: string
          format: ""
      responses:
       "200":
          description: This means its ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/server'
          
  /api/server/update/{id}:
   put:
      summary: Update a server.
      tags:
        - "Server"
      parameters:
      - name: id
        required: true
        in: path
        description: Fetch Result for an Id.
        schema:
          type: string
          format: ""
      responses:
       "200":
          description: This means its ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/server'
   
  /api/server/delete/{id}:
   delete:
      summary: Delete a server.
      tags:
        - "Server"
      parameters:
      - name: id
        required: true
        in: path
        description: Delete a server.
        schema:
          type: string
          format: ""
      responses:
        "200":
          description: This means its ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/server'
          
  /api/server/getByName/{name}:
   get:
      summary: Search a server.
      tags:
        - "Server"
      parameters:
      - name: name
        required: true
        in: path
        description: Delete a server.
        schema:
          type: string
          format: ""
      responses:
         "200":
          description: This means its ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/server'
          
    
  
components:
  schemas:
    server:
      description: This is the Server model.
      type: object
      properties:
        id:
          description: The ID of Server.
          type: string
        Name:
          description: The Name of server.
          type: string
        language:
          description: The Language Used on the Server.
          type: string
        framework:
          description: The Framework Used.
          type: string
          
          
          
  requestBodies:
    ServerBody:
      description: A JSON object containing Server information
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/server'